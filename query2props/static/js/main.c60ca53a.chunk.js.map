{"version":3,"sources":["history.js","components/classComp.js","components/functionComp.js","App.js","index.js"],"names":["history","createBrowserHistory","getRandomNum","maxNum","minNum","Math","floor","random","Demo","changeNumber","_this","props","updateQueryState","num","changeString","event","inputStr","target","value","changeNumericArray","numericArr","changeStringArray","stringArr","String","changeBoolean","bool","_this$props","this","react_default","a","createElement","className","onClick","onChange","JSON","stringify","React","PureComponent","queryToPropsHOC","queryPropsConfig","QueryPropTypes","number","string","numericArray","array","boolean","defaultQueryProps","validatorMap","type","ValidateTypes","function","val","queryToStateHOC","searchStr","mapDefaultQueryPropsToUrlWhenMounted","App","react_router","exact","path","classComp","functionComp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c60ca53a.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\n\nexport default history\n","import React from 'react'\nimport queryToPropsHOC, { QueryPropTypes, ValidateTypes } from 'react-query-string-to-props'\nimport history from '../history'\nimport './style.css'\n\nconst getRandomNum = (maxNum, minNum) => {\n  return Math.floor(Math.random() * maxNum) + minNum\n}\n\nclass Demo extends React.PureComponent {\n  changeNumber = () => {\n    this.props.updateQueryState({\n      num: getRandomNum(100, 1)\n    })\n  }\n\n  changeString = (event) => {\n    this.props.updateQueryState({\n      inputStr: event.target.value\n    })\n  }\n\n  changeNumericArray = () => {\n    this.props.updateQueryState({\n      numericArr: [\n        getRandomNum(10, 1),\n        getRandomNum(20, 1)\n      ]\n    })\n  }\n\n  changeStringArray = () => {\n    this.props.updateQueryState({\n      stringArr: [\n        String(getRandomNum(10, 1)),\n        String(getRandomNum(20, 1))\n      ]\n    })\n  }\n\n  changeBoolean = () => {\n    this.props.updateQueryState({\n      bool: !this.props.bool\n    })\n  }\n\n  render () {\n    const { num, inputStr, numericArr, stringArr, bool } = this.props\n\n    return (\n      <div>\n        <div className='item'>\n          <span>Number: {num}</span>\n          <span>type: {typeof num}</span>\n          <button onClick={this.changeNumber}>change number</button>\n        </div>\n        <div className='item'>\n          <span>String: {inputStr}</span>\n          <span>type: {typeof inputStr}</span>\n          <input onChange={this.changeString} />\n        </div>\n        <div className='item'>\n          <span>Numeric Array: {JSON.stringify(numericArr)}</span>\n          <span>item type: {typeof numericArr[0]}</span>\n          <button onClick={this.changeNumericArray}>change array</button>\n        </div>\n        <div className='item'>\n          <span>String Array: {JSON.stringify(stringArr)}</span>\n          <span>item type: {typeof stringArr[0]}</span>\n          <button onClick={this.changeStringArray}>change array</button>\n        </div>\n        <div className='item'>\n          <span>Boolean: {bool ? 'true' : 'false'}</span>\n          <span>type: {typeof bool}</span>\n          <button onClick={this.changeBoolean}>change boolean</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default queryToPropsHOC(Demo, {\n  history,\n  queryPropsConfig: {\n    num: QueryPropTypes.number,\n    inputStr: QueryPropTypes.string,\n    numericArr: QueryPropTypes.numericArray,\n    stringArr: QueryPropTypes.array,\n    bool: QueryPropTypes.boolean\n  },\n  defaultQueryProps: {\n    num: 50,\n    inputStr: 'abc',\n    numericArr: [1, 2],\n    stringArr: ['1', '2'],\n    bool: false\n  },\n  validatorMap: {\n    num: [\n      {\n        type: ValidateTypes.function,\n        value: val => {\n          return val >= 50\n        }\n      }\n    ]\n  }\n})\n","import React from 'react'\nimport queryToStateHOC, { QueryPropTypes } from 'react-query-string-to-props'\nimport history from '../history'\nimport './style.css'\n\nfunction Demo (props) {\n  const changeString = (event) => {\n    props.updateQueryState({\n      searchStr: event.target.value\n    })\n  }\n\n  const { searchStr } = props\n\n  return (\n    <div className='item'>\n      <span>String: {searchStr}</span>\n      <span>type: {typeof searchStr}</span>\n      <input onChange={changeString} />\n    </div>\n  )\n}\n\nexport default queryToStateHOC(Demo, {\n  history,\n  queryPropsConfig: {\n    searchStr: QueryPropTypes.string\n  },\n  defaultQueryProps: {\n    searchStr: 'search'\n  },\n  mapDefaultQueryPropsToUrlWhenMounted: true\n})\n","import React from 'react'\nimport { Router, Route } from 'react-router-dom'\nimport ClassComp from './components/classComp'\nimport FunctionComp from './components/functionComp'\nimport history from './history'\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Route exact path='/'>\n        <div>\n          <h3>ES6 Class Component</h3>\n          <ClassComp />\n        </div>\n        <div>\n          <h3>Functional Component</h3>\n          <FunctionComp />\n        </div>\n      </Route>\n    </Router>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}